openapi: 3.0.3
info:
  title: Kiosk API 1.0
  description: Kiosk team 04 API
  contact:
    email: email@google.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: Main
    description: 메인
  - name: Drink
    description: 음료
  - name: Order
    description: 주문
  - name: Payment
    description: 결제
paths:
  /index:
    get:
      tags:
        - Main
      summary: 메인 페이지 조회
      operationId: getMain
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Main'
  /drinks:
    get:
      tags:
        - Drink
      summary: 음료 목록 조회
      operationId: getDrinks
      parameters:
        - name: category
          in: query
          description: 카테고리
          required: true
          schema:
            type: string
            default: coffee
            enum:
              - coffee
              - latte
              - tea
              - juice
              - decaffeine
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Americano'
                    - $ref: '#/components/schemas/Coldbrew'
  /orders:
    post:
      tags:
        - Order
      summary: 음료 주문
      operationId: orderDrinks
      parameters:
        - name: payment
          in: query
          description: 결제 수단
          required: true
          schema:
            type: string
            enum:
              - card
              - cash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order-Request'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-Response'
  /payments:
    get:
      tags:
        - Payment
      summary: 가능한 결제 수단 조회
      operationId: getPayments
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Card'
                    - $ref: '#/components/schemas/Cash'
components:
  schemas:
    # Main
    Main:
      type: object
      properties:
        categories:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Coffee'
              - $ref: '#/components/schemas/Latte'
              - $ref: '#/components/schemas/Tea'
              - $ref: '#/components/schemas/Juice'
              - $ref: '#/components/schemas/Decaffeine'
        coffee:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Americano'
              - $ref: '#/components/schemas/Coldbrew'

    # Drink
    Americano:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          example: coffee
        name:
          type: string
          example: 아메리카노
        img:
          type: string
          example: https://image/americano.jpg
        price:
          type: integer
          example: 4000
        options:
          type: object
          properties:
            size:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Size-Big'
                  - $ref: '#/components/schemas/Size-Medium'
                  - $ref: '#/components/schemas/Size-Small'
            temperature:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Temperature-Hot'
                  - $ref: '#/components/schemas/Temperature-Cold'
    Coldbrew:
      type: object
      properties:
        id:
          type: integer
          example: 2
        type:
          type: string
          example: coffee
        name:
          type: string
          example: 콜드브루
        img:
          type: string
          example: https://image/coldbrew.jpg
        price:
          type: integer
          example: 5000
        options:
          type: object
          properties:
            size:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Size-Big'
                  - $ref: '#/components/schemas/Size-Medium'
                  - $ref: '#/components/schemas/Size-Small'

    # Payment
    Card:
      type: object
      properties:
        type:
          type: string
          example: card
        img:
          type: string
          example: https://image/card.jpg
        link:
          type: string
          example: /orders?type=card
    Cash:
      type: object
      properties:
        type:
          type: string
          example: cash
        img:
          type: string
          example: https://image/cash.jpg
        link:
          type: string
          example: /orders?type=cash

    # Order Request
    Order-Request:
      type: object
      properties:
        order_drink_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 3
        order_price:
          type: integer
          example: 12000
        recived_amount:
          type: integer
          example: 12000
        options:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Size-Big'
              - $ref: '#/components/schemas/Temperature-Cold'

    # Order Response
    Order-Response:
      type: object
      properties:
        order_id:
          type: integer
          example: 1
        total_price:
          type: integer
          example: 17000
        received_amount:
          type: integer
          example: 17000
        drinks:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Ordered-Americano'
              - $ref: '#/components/schemas/Ordered-Coldbrew'

    # Ordered Drink
    Ordered-Americano:
      type: object
      properties:
        drink_id:
          type: integer
          example: 1
        drink_name:
          type: string
          example: 아메리카노
        quantity:
          type: integer
          example: 3
        option_list:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Size-Big'
              - $ref: '#/components/schemas/Temperature-Cold'
    Ordered-Coldbrew:
      type: object
      properties:
        drink_id:
          type: integer
          example: 2
        drink_name:
          type: string
          example: 콜드브루
        quantity:
          type: integer
          example: 1
        option_list:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Size-Medium'

    # Option-Size
    Size-Big:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          example: 사이즈
        value:
          type: string
          example: big
    Size-Medium:
      type: object
      properties:
        id:
          type: integer
          example: 2
        type:
          type: string
          example: 사이즈
        value:
          type: string
          example: medium
    Size-Small:
      type: object
      properties:
        id:
          type: integer
          example: 3
        type:
          type: string
          example: 사이즈
        value:
          type: string
          example: small

    # Option-Temperature
    Temperature-Hot:
      type: object
      properties:
        id:
          type: integer
          example: 4
        type:
          type: string
          example: 온도
        value:
          type: string
          example: hot
    Temperature-Cold:
      type: object
      properties:
        id:
          type: integer
          example: 5
        type:
          type: string
          example: 온도
        value:
          type: string
          example: cold

    # Category
    Coffee:
      type: object
      properties:
        id:
          type: string
          example: coffee
        name:
          type: string
          example: 커피
    Latte:
      type: object
      properties:
        id:
          type: string
          example: latte
        name:
          type: string
          example: 라떼
    Tea:
      type: object
      properties:
        id:
          type: string
          example: tea
        name:
          type: string
          example: 티
    Juice:
      type: object
      properties:
        id:
          type: string
          example: juice
        name:
          type: string
          example: 주스
    Decaffeine:
      type: object
      properties:
        id:
          type: string
          example: decaffeine
        name:
          type: string
          example: 디카페인
