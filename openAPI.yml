openapi: 3.0.3
info:
  title: Kiosk API 1.0
  description: Kiosk team 04 API에용
  contact:
    email: jkj7651@naver.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: Main
    description: 메인
  - name: Drink
    description: 음료
  - name: Order
    description: 주문
  - name: Payment
    description: 결제수단
paths:
  /index:
    get:
      tags:
        - Main
      summary: 메인 페이지 조회용
      operationId: getMainPage
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Main'
  /drinks:
    get:
      tags:
        - Drink
      summary: 음료를 조회합니다
      operationId: getDrinks
      parameters:
        - name: type
          in: query
          description: 카테고리
          required: true
          schema:
            type: string
            default: coffee
            enum:
              - coffee
              - latte
              - tea
              - juice
              - decaffeine
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
  /payments:
    get:
      tags:
        - Payment
      summary: 결제 수단을 조회해용
      operationId: getPayments
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
  /orders:
    post:
      tags:
        - Order
      summary: 주문을 해용~
      operationId: orderDrinks
      parameters:
        - name: payment_type
          in: query
          description: 결제 수단
          required: true
          schema:
            type: string
            enum:
              - card
              - cash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Orders'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Receipt'
components:
  schemas:
    Drink:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 아메리카노
        img:
          type: string
          example: img/1
        price:
          type: integer
          format: int64
          example: 3000
        type:
          type: string
          example: coffee
    Payment:
      type: object
      properties:
        name:
          type: string
          example: card
        img:
          type: string
          example: card
        link:
          type: string
          example: /orders?type=card
    Order:
      type: object
      properties:
        order_drink_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 2
        order_price:
          type: integer
          example: 9000
        option_list:
          type: array
          items:
            $ref: '#/components/schemas/Option'
    Orders:
      type: object
      properties:
        order_list:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        received_amount:
          type: integer
          example: 9000
    Receipt:
      type: object
      properties:
        order_id:
          type: integer
          example: 1
        order_drink_list:
          type: array
          items:
            $ref: '#/components/schemas/OrderDrink'
        payment_type:
          type: string
          example: 카드
        received_amount:
          type: integer
          example: 9000
        total_amount:
          type: integer
          example: 9000
        changes:
          type: integer
          example: 0
    OrderDrink:
      type: object
      properties:
        drink_name:
          type: string
          example: 아메리카노
        quantity:
          type: integer
          example: 2
        option_list:
          type: array
          items:
            $ref: '#/components/schemas/Option'
    Option:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          example: 사이즈
        value:
          type: string
          example: 큰거
    Main:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        drink_list:
          type: array
          items:
            $ref: '#/components/schemas/Drink'
    Category:
      type: object
      properties:
        id:
          type: string
          example: coffee
        name:
          type: string
          example: 커피
