name: ci-cd

on:
  push:
    branches:
      - release
      - backend
  pull_request:
    branches:
      - release
      - backend

env:
  working-directory: ./backend
  APPLICATION_PROPERTIES_FILE_PATH: ./src/main/resources/application-prod.yml
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: kiosk-team01-actions-bucket
  CODE_DEPLOY_APPLICATION_NAME: kiosk-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: kiosk-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend
    
    steps:

      # 0. Source 단계
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 1. db 정보를 담은 yml 파일 생성
      - name: Make application-prod.yml file
        run: touch '${{ env.APPLICATION_PROPERTIES_FILE_PATH }}'

      - name: Output application information
        run: echo '${{ secrets.APPLICATION }}' > '${{ env.APPLICATION_PROPERTIES_FILE_PATH }}'


      # 2. Build 단계
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

        # 3. S3에 파일 업로드(zip 으로 압축 → AWS 권한 부여 → S3로 전송)
        # 3.1 zip 으로 압축
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .

        # 3.2 AWS 권한 부여
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

        # 3.3 S3로 전송
      - name: Upload to S3
        run: aws s3 cp
          --region '${{ env.AWS_REGION }}' ./$GITHUB_SHA.zip
          s3://$S3_BUCKET_NAME/Build/$GITHUB_SHA.zip

        # 4. Code Deploy 단계
      - name: Code Deploy
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APPLICATION_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=Build/$GITHUB_SHA.zip
